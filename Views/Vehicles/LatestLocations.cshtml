<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Latest Vehicle Locations</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <style>
        .header {
            background-color: #ff6666;
            color: white;
            padding: 10px;
            text-align: center;
            margin-top: 20px; 
            border-radius: 10px;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
        }

        h1.text-center {
            font-weight: bold;
            color: #343a40;
            margin-top: 20px;
            margin-bottom: 20px;
        }
        #map {
            height: 500px;
            width: 100%;
        }

        .loading-spinner {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        #preloader {
            background: rgba(255, 255, 255, 0.8) no-repeat center center; /* Change this line */
            height: 100vh;
            width: 100%;
            position: fixed;
            z-index: 100;
            display: flex;
            align-items: center;
            justify-content: center;
        }
    </style>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.13.3/css/dataTables.jqueryui.min.css" />
</head>
<body>
    <h1 class="header">Latest Vehicle Locations</h1>
    <div class="container">
        <table id="dataTable" class="table table-bordered mt-3">
            <thead class="thead-light">
                <tr>
                    <th>Vehicle ID</th>
                    <th>Latitude</th>
                    <th>Longitude</th>
                    <th>Timestamp</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var location in Model)
                {
                    <tr>
                        <td>@location.VehicleId</td>
                        <td>@location.Latitude</td>
                        <td>@location.Longitude</td>
                        <td>@location.Timestamp.ToString("yyyy-MM-dd HH:mm:ss")</td>
                    </tr>
                }
            </tbody>
        </table>

        <div id="map"></div>
    </div>

    
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.3/js/jquery.dataTables.min.js"></script>

    <script>
       
        const dataTable = $('#dataTable').DataTable({
            "order": []
        });

        // Initiation
        const map = L.map('map').setView([0, 0], 2); // Center at [0, 0] with zoom level 2
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 15,
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Load vehicle data into JavaScript (ASP.NET Model data as JSON)
        const locations = @Html.Raw(Json.Serialize(Model));

        //Store current markers
        let markers = [];

        
        function updateMap(filteredLocations) {
            // Clear exiting markers
            markers.forEach(marker => map.removeLayer(marker));
            markers = [];

            // Add markers for each filtered location
            filteredLocations.forEach(vehicle => {
                const marker = L.marker([vehicle.latitude, vehicle.longitude]).addTo(map);
                marker.bindPopup(`<b>Vehicle ID:</b> ${vehicle.vehicleId}<br><b>Location:</b> ${vehicle.latitude}, ${vehicle.longitude}`);
                marker.bindTooltip(`Vehicle ID: ${vehicle.vehicleId}`, { permanent: true, direction: "right" }).openTooltip();
                markers.push(marker);
            });

            // Adjust the map view to fit all markers if there are any
            if (markers.length > 0) {
                const group = new L.featureGroup(markers);
                map.fitBounds(group.getBounds(), { padding: [50, 50] });
            } else {
                map.setView([0, 0], 2); // Reset
            }
        }

        // Initiation for markers
        updateMap(locations);

        // Listen search events
        dataTable.on('search.dt', function () {
            const filteredData = dataTable.rows({ filter: 'applied' }).data().toArray();
            const filteredLocations = locations.filter(location =>
                filteredData.some(row => row[0] == location.vehicleId) // Compare Vehicle ID
            );
            // Apply new filtered vehicles
            updateMap(filteredLocations);
        });
    </script>
    <script>
        $(window).on('load', function () {
            setTimeout(function () {
                $('#preloader').fadeOut('slow', function () {
                    $(this).remove();
                });
                $('.loading-spinner').hide();
            }, 1000);
        });

    </script>
</body>
</html>
